/*$file${.::UartMstr.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: uart_mstr.qm
* File:  ${.::UartMstr.h}
*
* This code has been generated by QM 5.2.5 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${.::UartMstr.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef UARTMSTR_H
#define UARTMSTR_H

enum UartMstrSignals{
    DUMMY_SIG = Q_USER_SIG,
    MAX_PUB_SIG,

    TIMEOUT_SIG,
    ENABLE_SIG,
    DISABLE_SIG,
    TX_DONE_SIG,
    CMD_SIG,
    RSP_SIG,
    MAX_SIG
};

/* active object(s) used in this application -------------------------------*/
extern QActive * const AO_UartMstr; /* opaque pointer */

/* declare shared facilities */
/*$declare${shared} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${shared::CmdEvt} ........................................................*/
typedef struct {
/* protected: */
    QEvt super;

/* public: */
    uint8_t cmd;
} CmdEvt;

/*${shared::RspEvt} ........................................................*/
typedef struct {
/* protected: */
    QEvt super;

/* public: */
    uint8_t rsp;
} RspEvt;
/*$enddecl${shared} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/* declare ctor */
/*$declare${AOs::UartMstr_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::UartMstr_ctor} ....................................................*/
void UartMstr_ctor(void);
/*$enddecl${AOs::UartMstr_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

#endif
